/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtInAppMessageInfo {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<crate::models::BtInAppMessageContent>>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    #[serde(rename = "ruleId", skip_serializing_if = "Option::is_none")]
    pub rule_id: Option<String>,
    #[serde(rename = "lookerQuery", skip_serializing_if = "Option::is_none")]
    pub looker_query: Option<i64>,
    #[serde(rename = "populationTaskId", skip_serializing_if = "Option::is_none")]
    pub population_task_id: Option<String>,
    #[serde(rename = "billingPlanIds", skip_serializing_if = "Option::is_none")]
    pub billing_plan_ids: Option<Vec<String>>,
    #[serde(rename = "domainType", skip_serializing_if = "Option::is_none")]
    pub domain_type: Option<i32>,
    #[serde(rename = "showOnce", skip_serializing_if = "Option::is_none")]
    pub show_once: Option<bool>,
    #[serde(rename = "displayOrder", skip_serializing_if = "Option::is_none")]
    pub display_order: Option<i32>,
    #[serde(rename = "contentIndex", skip_serializing_if = "Option::is_none")]
    pub content_index: Option<i32>,
    #[serde(rename = "context", skip_serializing_if = "Option::is_none")]
    pub context: Option<i32>,
    #[serde(rename = "contentType", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<i32>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl BtInAppMessageInfo {
    pub fn new() -> BtInAppMessageInfo {
        BtInAppMessageInfo {
            description: None,
            content: None,
            start_date: None,
            end_date: None,
            rule_id: None,
            looker_query: None,
            population_task_id: None,
            billing_plan_ids: None,
            domain_type: None,
            show_once: None,
            display_order: None,
            content_index: None,
            context: None,
            content_type: None,
            href: None,
            view_ref: None,
            name: None,
            id: None,
        }
    }
}


