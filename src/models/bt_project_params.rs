/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtProjectParams {
    #[serde(rename = "permissionSchemeId", skip_serializing_if = "Option::is_none")]
    pub permission_scheme_id: Option<String>,
    #[serde(rename = "roleIdentityMap", skip_serializing_if = "Option::is_none")]
    pub role_identity_map: Option<::std::collections::HashMap<String, Vec<crate::models::BtIdentity>>>,
    #[serde(rename = "roleMap", skip_serializing_if = "Option::is_none")]
    pub role_map: Option<::std::collections::HashMap<String, Vec<crate::models::BtIdentityParams>>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl BtProjectParams {
    pub fn new() -> BtProjectParams {
        BtProjectParams {
            permission_scheme_id: None,
            role_identity_map: None,
            role_map: None,
            name: None,
            description: None,
        }
    }
}


