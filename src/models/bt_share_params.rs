/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtShareParams {
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "folderId", skip_serializing_if = "Option::is_none")]
    pub folder_id: Option<String>,
    #[serde(rename = "permissionSet", skip_serializing_if = "Option::is_none")]
    pub permission_set: Option<serde_json::Value>,
    #[serde(rename = "update", skip_serializing_if = "Option::is_none")]
    pub update: Option<bool>,
    #[serde(rename = "encodedConfiguration", skip_serializing_if = "Option::is_none")]
    pub encoded_configuration: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "entries", skip_serializing_if = "Option::is_none")]
    pub entries: Option<Vec<crate::models::BtShareEntryParams>>,
    #[serde(rename = "permission", skip_serializing_if = "Option::is_none")]
    pub permission: Option<i64>,
}

impl BtShareParams {
    pub fn new() -> BtShareParams {
        BtShareParams {
            workspace_id: None,
            element_id: None,
            document_id: None,
            folder_id: None,
            permission_set: None,
            update: None,
            encoded_configuration: None,
            message: None,
            entries: None,
            permission: None,
        }
    }
}


