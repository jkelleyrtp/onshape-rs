/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtBrokenOutEndCondition {
    #[serde(rename = "uptoPoint3d", skip_serializing_if = "Option::is_none")]
    pub upto_point3d: Option<crate::models::BtVector3d>,
    #[serde(rename = "uptoPoint", skip_serializing_if = "Option::is_none")]
    pub upto_point: Option<Vec<f64>>,
    #[serde(rename = "hasUptoPoint", skip_serializing_if = "Option::is_none")]
    pub has_upto_point: Option<bool>,
    #[serde(rename = "hasOffset", skip_serializing_if = "Option::is_none")]
    pub has_offset: Option<bool>,
    #[serde(rename = "offsetDistance", skip_serializing_if = "Option::is_none")]
    pub offset_distance: Option<f64>,
    #[serde(rename = "offsetOppositeDirection", skip_serializing_if = "Option::is_none")]
    pub offset_opposite_direction: Option<bool>,
}

impl BtBrokenOutEndCondition {
    pub fn new() -> BtBrokenOutEndCondition {
        BtBrokenOutEndCondition {
            upto_point3d: None,
            upto_point: None,
            has_upto_point: None,
            has_offset: None,
            offset_distance: None,
            offset_opposite_direction: None,
        }
    }
}


