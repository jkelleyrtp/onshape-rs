/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Subscription {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    #[serde(rename = "applicationFeePercent", skip_serializing_if = "Option::is_none")]
    pub application_fee_percent: Option<f64>,
    #[serde(rename = "billing", skip_serializing_if = "Option::is_none")]
    pub billing: Option<String>,
    #[serde(rename = "cancelAtPeriodEnd", skip_serializing_if = "Option::is_none")]
    pub cancel_at_period_end: Option<bool>,
    #[serde(rename = "canceledAt", skip_serializing_if = "Option::is_none")]
    pub canceled_at: Option<i64>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i64>,
    #[serde(rename = "currentPeriodEnd", skip_serializing_if = "Option::is_none")]
    pub current_period_end: Option<i64>,
    #[serde(rename = "currentPeriodStart", skip_serializing_if = "Option::is_none")]
    pub current_period_start: Option<i64>,
    #[serde(rename = "customer", skip_serializing_if = "Option::is_none")]
    pub customer: Option<String>,
    #[serde(rename = "daysUntilDue", skip_serializing_if = "Option::is_none")]
    pub days_until_due: Option<i32>,
    #[serde(rename = "discount", skip_serializing_if = "Option::is_none")]
    pub discount: Option<crate::models::Discount>,
    #[serde(rename = "endedAt", skip_serializing_if = "Option::is_none")]
    pub ended_at: Option<i64>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "plan", skip_serializing_if = "Option::is_none")]
    pub plan: Option<crate::models::Plan>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<i32>,
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i64>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "taxPercent", skip_serializing_if = "Option::is_none")]
    pub tax_percent: Option<f64>,
    #[serde(rename = "trialEnd", skip_serializing_if = "Option::is_none")]
    pub trial_end: Option<i64>,
    #[serde(rename = "trialStart", skip_serializing_if = "Option::is_none")]
    pub trial_start: Option<i64>,
    #[serde(rename = "customerObject", skip_serializing_if = "Option::is_none")]
    pub customer_object: Option<crate::models::Customer>,
    #[serde(rename = "subscriptionItems", skip_serializing_if = "Option::is_none")]
    pub subscription_items: Option<crate::models::SubscriptionItemCollection>,
}

impl Subscription {
    pub fn new() -> Subscription {
        Subscription {
            id: None,
            object: None,
            application_fee_percent: None,
            billing: None,
            cancel_at_period_end: None,
            canceled_at: None,
            created: None,
            current_period_end: None,
            current_period_start: None,
            customer: None,
            days_until_due: None,
            discount: None,
            ended_at: None,
            metadata: None,
            plan: None,
            quantity: None,
            start: None,
            status: None,
            tax_percent: None,
            trial_end: None,
            trial_start: None,
            customer_object: None,
            subscription_items: None,
        }
    }
}


