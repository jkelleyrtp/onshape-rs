/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtWorkflowPropertyInfo {
    #[serde(rename = "isApproverProperty", skip_serializing_if = "Option::is_none")]
    pub is_approver_property: Option<bool>,
    #[serde(rename = "isNotifierProperty", skip_serializing_if = "Option::is_none")]
    pub is_notifier_property: Option<bool>,
    #[serde(rename = "required", skip_serializing_if = "Option::is_none")]
    pub required: Option<bool>,
    #[serde(rename = "validator", skip_serializing_if = "Option::is_none")]
    pub validator: Option<crate::models::BtMetadataPropertyValidatorInfo>,
    #[serde(rename = "propertySource", skip_serializing_if = "Option::is_none")]
    pub property_source: Option<i32>,
    #[serde(rename = "propertyId", skip_serializing_if = "Option::is_none")]
    pub property_id: Option<String>,
    #[serde(rename = "editable", skip_serializing_if = "Option::is_none")]
    pub editable: Option<bool>,
    #[serde(rename = "valueType", skip_serializing_if = "Option::is_none")]
    pub value_type: Option<String>,
    #[serde(rename = "schemaId", skip_serializing_if = "Option::is_none")]
    pub schema_id: Option<String>,
    #[serde(rename = "enumValues", skip_serializing_if = "Option::is_none")]
    pub enum_values: Option<Vec<crate::models::BtMetadataEnumValueInfo>>,
    #[serde(rename = "initialValue", skip_serializing_if = "Option::is_none")]
    pub initial_value: Option<serde_json::Value>,
    #[serde(rename = "editableInUi", skip_serializing_if = "Option::is_none")]
    pub editable_in_ui: Option<bool>,
    #[serde(rename = "uiHints", skip_serializing_if = "Option::is_none")]
    pub ui_hints: Option<crate::models::BtMetadataPropertyUiHintsInfo>,
    #[serde(rename = "dirty", skip_serializing_if = "Option::is_none")]
    pub dirty: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "defaultValue", skip_serializing_if = "Option::is_none")]
    pub default_value: Option<serde_json::Value>,
}

impl BtWorkflowPropertyInfo {
    pub fn new() -> BtWorkflowPropertyInfo {
        BtWorkflowPropertyInfo {
            is_approver_property: None,
            is_notifier_property: None,
            required: None,
            validator: None,
            property_source: None,
            property_id: None,
            editable: None,
            value_type: None,
            schema_id: None,
            enum_values: None,
            initial_value: None,
            editable_in_ui: None,
            ui_hints: None,
            dirty: None,
            name: None,
            default_value: None,
        }
    }
}


