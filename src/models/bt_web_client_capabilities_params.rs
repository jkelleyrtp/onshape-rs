/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtWebClientCapabilitiesParams {
    #[serde(rename = "oesStandardDerivatives_", skip_serializing_if = "Option::is_none")]
    pub oes_standard_derivatives_: Option<bool>,
    #[serde(rename = "vendor", skip_serializing_if = "Option::is_none")]
    pub vendor: Option<String>,
    #[serde(rename = "depthTexture", skip_serializing_if = "Option::is_none")]
    pub depth_texture: Option<bool>,
    #[serde(rename = "renderer", skip_serializing_if = "Option::is_none")]
    pub renderer: Option<String>,
    #[serde(rename = "angleInstancedArrays", skip_serializing_if = "Option::is_none")]
    pub angle_instanced_arrays: Option<bool>,
    #[serde(rename = "extTextureFilterAnisotropic", skip_serializing_if = "Option::is_none")]
    pub ext_texture_filter_anisotropic: Option<bool>,
    #[serde(rename = "oesElementIndexUint", skip_serializing_if = "Option::is_none")]
    pub oes_element_index_uint: Option<bool>,
    #[serde(rename = "oesTextureFloat", skip_serializing_if = "Option::is_none")]
    pub oes_texture_float: Option<bool>,
    #[serde(rename = "oesTextureFloatLinear", skip_serializing_if = "Option::is_none")]
    pub oes_texture_float_linear: Option<bool>,
    #[serde(rename = "oesTextureHalfFloat", skip_serializing_if = "Option::is_none")]
    pub oes_texture_half_float: Option<bool>,
    #[serde(rename = "oesTextureHalfFloatLinear", skip_serializing_if = "Option::is_none")]
    pub oes_texture_half_float_linear: Option<bool>,
    #[serde(rename = "oesVertexArrayObject", skip_serializing_if = "Option::is_none")]
    pub oes_vertex_array_object: Option<bool>,
    #[serde(rename = "compressedTextureS3tc", skip_serializing_if = "Option::is_none")]
    pub compressed_texture_s3tc: Option<bool>,
    #[serde(rename = "drawBuffers", skip_serializing_if = "Option::is_none")]
    pub draw_buffers: Option<bool>,
    #[serde(rename = "has3dMouse", skip_serializing_if = "Option::is_none")]
    pub has3d_mouse: Option<bool>,
    #[serde(rename = "screenWidth", skip_serializing_if = "Option::is_none")]
    pub screen_width: Option<i32>,
    #[serde(rename = "screenHeight", skip_serializing_if = "Option::is_none")]
    pub screen_height: Option<i32>,
    #[serde(rename = "devicePixelRatio", skip_serializing_if = "Option::is_none")]
    pub device_pixel_ratio: Option<f64>,
}

impl BtWebClientCapabilitiesParams {
    pub fn new() -> BtWebClientCapabilitiesParams {
        BtWebClientCapabilitiesParams {
            oes_standard_derivatives_: None,
            vendor: None,
            depth_texture: None,
            renderer: None,
            angle_instanced_arrays: None,
            ext_texture_filter_anisotropic: None,
            oes_element_index_uint: None,
            oes_texture_float: None,
            oes_texture_float_linear: None,
            oes_texture_half_float: None,
            oes_texture_half_float_linear: None,
            oes_vertex_array_object: None,
            compressed_texture_s3tc: None,
            draw_buffers: None,
            has3d_mouse: None,
            screen_width: None,
            screen_height: None,
            device_pixel_ratio: None,
        }
    }
}


