/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtapiApplicationParams {
    #[serde(rename = "hiddenFromPlusMenu_", skip_serializing_if = "Option::is_none")]
    pub hidden_from_plus_menu_: Option<bool>,
    #[serde(rename = "developerId", skip_serializing_if = "Option::is_none")]
    pub developer_id: Option<String>,
    #[serde(rename = "redirectURLs", skip_serializing_if = "Option::is_none")]
    pub redirect_ur_ls: Option<Vec<String>>,
    #[serde(rename = "uiSpec", skip_serializing_if = "Option::is_none")]
    pub ui_spec: Option<String>,
    #[serde(rename = "supportsMerge", skip_serializing_if = "Option::is_none")]
    pub supports_merge: Option<bool>,
    #[serde(rename = "emebeddedOnshapeAuthType", skip_serializing_if = "Option::is_none")]
    pub emebedded_onshape_auth_type: Option<i32>,
    #[serde(rename = "emebeddedExternalAuthType", skip_serializing_if = "Option::is_none")]
    pub emebedded_external_auth_type: Option<i32>,
    #[serde(rename = "adminTeamId", skip_serializing_if = "Option::is_none")]
    pub admin_team_id: Option<String>,
    #[serde(rename = "hiddenFromPlusMenu", skip_serializing_if = "Option::is_none")]
    pub hidden_from_plus_menu: Option<bool>,
    #[serde(rename = "storeEntryIsPublic", skip_serializing_if = "Option::is_none")]
    pub store_entry_is_public: Option<bool>,
    #[serde(rename = "developerEmail", skip_serializing_if = "Option::is_none")]
    pub developer_email: Option<String>,
    #[serde(rename = "internalGrantOnDemand", skip_serializing_if = "Option::is_none")]
    pub internal_grant_on_demand: Option<bool>,
    #[serde(rename = "clientId", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "scopeNames", skip_serializing_if = "Option::is_none")]
    pub scope_names: Option<Vec<String>>,
    #[serde(rename = "primaryFormat", skip_serializing_if = "Option::is_none")]
    pub primary_format: Option<String>,
    #[serde(rename = "baseHref", skip_serializing_if = "Option::is_none")]
    pub base_href: Option<String>,
    #[serde(rename = "supportsCollaboration", skip_serializing_if = "Option::is_none")]
    pub supports_collaboration: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<i32>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<i32>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl BtapiApplicationParams {
    pub fn new() -> BtapiApplicationParams {
        BtapiApplicationParams {
            hidden_from_plus_menu_: None,
            developer_id: None,
            redirect_ur_ls: None,
            ui_spec: None,
            supports_merge: None,
            emebedded_onshape_auth_type: None,
            emebedded_external_auth_type: None,
            admin_team_id: None,
            hidden_from_plus_menu: None,
            store_entry_is_public: None,
            developer_email: None,
            internal_grant_on_demand: None,
            client_id: None,
            scope_names: None,
            primary_format: None,
            base_href: None,
            supports_collaboration: None,
            name: None,
            state: None,
            _type: None,
            description: None,
        }
    }
}


