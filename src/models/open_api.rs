/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct OpenApi {
    #[serde(rename = "openapi", skip_serializing_if = "Option::is_none")]
    pub openapi: Option<String>,
    #[serde(rename = "info", skip_serializing_if = "Option::is_none")]
    pub info: Option<crate::models::Info>,
    #[serde(rename = "externalDocs", skip_serializing_if = "Option::is_none")]
    pub external_docs: Option<crate::models::ExternalDocumentation>,
    #[serde(rename = "servers", skip_serializing_if = "Option::is_none")]
    pub servers: Option<Vec<crate::models::Server>>,
    #[serde(rename = "security", skip_serializing_if = "Option::is_none")]
    pub security: Option<Vec<crate::models::SecurityRequirement>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::Tag>>,
    #[serde(rename = "paths", skip_serializing_if = "Option::is_none")]
    pub paths: Option<::std::collections::HashMap<String, crate::models::PathItem>>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<crate::models::Components>,
    #[serde(rename = "extensions", skip_serializing_if = "Option::is_none")]
    pub extensions: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl OpenApi {
    pub fn new() -> OpenApi {
        OpenApi {
            openapi: None,
            info: None,
            external_docs: None,
            servers: None,
            security: None,
            tags: None,
            paths: None,
            components: None,
            extensions: None,
        }
    }
}


