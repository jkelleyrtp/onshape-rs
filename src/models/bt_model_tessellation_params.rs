/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtModelTessellationParams {
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "partIds", skip_serializing_if = "Option::is_none")]
    pub part_ids: Option<Vec<String>>,
    #[serde(rename = "partQuery", skip_serializing_if = "Option::is_none")]
    pub part_query: Option<String>,
    #[serde(rename = "angleTolerance", skip_serializing_if = "Option::is_none")]
    pub angle_tolerance: Option<f64>,
    #[serde(rename = "chordTolerance", skip_serializing_if = "Option::is_none")]
    pub chord_tolerance: Option<f64>,
    #[serde(rename = "maxFacetWidth", skip_serializing_if = "Option::is_none")]
    pub max_facet_width: Option<f64>,
    #[serde(rename = "outputVertexNormals", skip_serializing_if = "Option::is_none")]
    pub output_vertex_normals: Option<bool>,
    #[serde(rename = "outputFacetNormals", skip_serializing_if = "Option::is_none")]
    pub output_facet_normals: Option<bool>,
    #[serde(rename = "outputTextureCoordinates", skip_serializing_if = "Option::is_none")]
    pub output_texture_coordinates: Option<bool>,
    #[serde(rename = "outputIndexTable", skip_serializing_if = "Option::is_none")]
    pub output_index_table: Option<bool>,
    #[serde(rename = "entityIds", skip_serializing_if = "Option::is_none")]
    pub entity_ids: Option<Vec<String>>,
    #[serde(rename = "outputErrorFaces", skip_serializing_if = "Option::is_none")]
    pub output_error_faces: Option<bool>,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "elementMicroversionId", skip_serializing_if = "Option::is_none")]
    pub element_microversion_id: Option<String>,
}

impl BtModelTessellationParams {
    pub fn new() -> BtModelTessellationParams {
        BtModelTessellationParams {
            configuration: None,
            workspace_id: None,
            element_id: None,
            document_id: None,
            part_ids: None,
            part_query: None,
            angle_tolerance: None,
            chord_tolerance: None,
            max_facet_width: None,
            output_vertex_normals: None,
            output_facet_normals: None,
            output_texture_coordinates: None,
            output_index_table: None,
            entity_ids: None,
            output_error_faces: None,
            part_id: None,
            element_microversion_id: None,
        }
    }
}


