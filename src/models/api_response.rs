/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiResponse {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "headers", skip_serializing_if = "Option::is_none")]
    pub headers: Option<::std::collections::HashMap<String, crate::models::Header>>,
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<::std::collections::HashMap<String, crate::models::MediaType>>,
    #[serde(rename = "links", skip_serializing_if = "Option::is_none")]
    pub links: Option<::std::collections::HashMap<String, crate::models::Link>>,
    #[serde(rename = "extensions", skip_serializing_if = "Option::is_none")]
    pub extensions: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "get$ref", skip_serializing_if = "Option::is_none")]
    pub getref: Option<String>,
}

impl ApiResponse {
    pub fn new() -> ApiResponse {
        ApiResponse {
            description: None,
            headers: None,
            content: None,
            links: None,
            extensions: None,
            getref: None,
        }
    }
}


