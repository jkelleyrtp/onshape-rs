/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtAppElementReferenceResolveInfo {
    #[serde(rename = "targetElementMicroversionId", skip_serializing_if = "Option::is_none")]
    pub target_element_microversion_id: Option<String>,
    #[serde(rename = "resolvedElementMicroversionId", skip_serializing_if = "Option::is_none")]
    pub resolved_element_microversion_id: Option<String>,
    #[serde(rename = "idTagIsValid", skip_serializing_if = "Option::is_none")]
    pub id_tag_is_valid: Option<bool>,
    #[serde(rename = "partNumber", skip_serializing_if = "Option::is_none")]
    pub part_number: Option<String>,
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<String>,
    #[serde(rename = "changeId", skip_serializing_if = "Option::is_none")]
    pub change_id: Option<String>,
    #[serde(rename = "idTag", skip_serializing_if = "Option::is_none")]
    pub id_tag: Option<String>,
    #[serde(rename = "targetDocumentId", skip_serializing_if = "Option::is_none")]
    pub target_document_id: Option<String>,
    #[serde(rename = "targetElementId", skip_serializing_if = "Option::is_none")]
    pub target_element_id: Option<String>,
    #[serde(rename = "targetConfiguration", skip_serializing_if = "Option::is_none")]
    pub target_configuration: Option<String>,
    #[serde(rename = "targetVersionId", skip_serializing_if = "Option::is_none")]
    pub target_version_id: Option<String>,
    #[serde(rename = "sketchIds", skip_serializing_if = "Option::is_none")]
    pub sketch_ids: Option<Vec<String>>,
    #[serde(rename = "isSurface", skip_serializing_if = "Option::is_none")]
    pub is_surface: Option<bool>,
    #[serde(rename = "isSketchOnly", skip_serializing_if = "Option::is_none")]
    pub is_sketch_only: Option<bool>,
    #[serde(rename = "referenceId", skip_serializing_if = "Option::is_none")]
    pub reference_id: Option<String>,
    #[serde(rename = "targetDocumentMicroversionId", skip_serializing_if = "Option::is_none")]
    pub target_document_microversion_id: Option<String>,
    #[serde(rename = "isConfigurable", skip_serializing_if = "Option::is_none")]
    pub is_configurable: Option<bool>,
    #[serde(rename = "resolvedDocumentMicroversionId", skip_serializing_if = "Option::is_none")]
    pub resolved_document_microversion_id: Option<String>,
    #[serde(rename = "trackNewVersions", skip_serializing_if = "Option::is_none")]
    pub track_new_versions: Option<bool>,
    #[serde(rename = "isFlattenedPart", skip_serializing_if = "Option::is_none")]
    pub is_flattened_part: Option<bool>,
    #[serde(rename = "referenceType", skip_serializing_if = "Option::is_none")]
    pub reference_type: Option<i32>,
    #[serde(rename = "errorCode", skip_serializing_if = "Option::is_none")]
    pub error_code: Option<i32>,
    #[serde(rename = "errorValue", skip_serializing_if = "Option::is_none")]
    pub error_value: Option<ErrorValue>,
    #[serde(rename = "errorDescription", skip_serializing_if = "Option::is_none")]
    pub error_description: Option<String>,
}

impl BtAppElementReferenceResolveInfo {
    pub fn new() -> BtAppElementReferenceResolveInfo {
        BtAppElementReferenceResolveInfo {
            target_element_microversion_id: None,
            resolved_element_microversion_id: None,
            id_tag_is_valid: None,
            part_number: None,
            revision: None,
            change_id: None,
            id_tag: None,
            target_document_id: None,
            target_element_id: None,
            target_configuration: None,
            target_version_id: None,
            sketch_ids: None,
            is_surface: None,
            is_sketch_only: None,
            reference_id: None,
            target_document_microversion_id: None,
            is_configurable: None,
            resolved_document_microversion_id: None,
            track_new_versions: None,
            is_flattened_part: None,
            reference_type: None,
            error_code: None,
            error_value: None,
            error_description: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ErrorValue {
    #[serde(rename = "OK")]
    OK,
    #[serde(rename = "TRANSACTION_CONFLICT")]
    TRANSACTIONCONFLICT,
    #[serde(rename = "NOT_FOUND")]
    NOTFOUND,
    #[serde(rename = "INCONSISTENT_CHANGES")]
    INCONSISTENTCHANGES,
}

