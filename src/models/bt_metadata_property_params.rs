/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtMetadataPropertyParams {
    #[serde(rename = "valueType", skip_serializing_if = "Option::is_none")]
    pub value_type: Option<i32>,
    #[serde(rename = "ownerId", skip_serializing_if = "Option::is_none")]
    pub owner_id: Option<String>,
    #[serde(rename = "propertyConfigParamList", skip_serializing_if = "Option::is_none")]
    pub property_config_param_list: Option<Vec<crate::models::BtMetadataPropertyConfigParams>>,
    #[serde(rename = "objectDefName", skip_serializing_if = "Option::is_none")]
    pub object_def_name: Option<String>,
    #[serde(rename = "blobMimeType", skip_serializing_if = "Option::is_none")]
    pub blob_mime_type: Option<String>,
    #[serde(rename = "editableInVersion", skip_serializing_if = "Option::is_none")]
    pub editable_in_version: Option<bool>,
    #[serde(rename = "editableInMicroversion", skip_serializing_if = "Option::is_none")]
    pub editable_in_microversion: Option<bool>,
    #[serde(rename = "uiReadonlyInVersion", skip_serializing_if = "Option::is_none")]
    pub ui_readonly_in_version: Option<bool>,
    #[serde(rename = "uiReadonlyInMicroversion", skip_serializing_if = "Option::is_none")]
    pub ui_readonly_in_microversion: Option<bool>,
    #[serde(rename = "searchBoost", skip_serializing_if = "Option::is_none")]
    pub search_boost: Option<f64>,
    #[serde(rename = "array", skip_serializing_if = "Option::is_none")]
    pub array: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "ownerType", skip_serializing_if = "Option::is_none")]
    pub owner_type: Option<i32>,
}

impl BtMetadataPropertyParams {
    pub fn new() -> BtMetadataPropertyParams {
        BtMetadataPropertyParams {
            value_type: None,
            owner_id: None,
            property_config_param_list: None,
            object_def_name: None,
            blob_mime_type: None,
            editable_in_version: None,
            editable_in_microversion: None,
            ui_readonly_in_version: None,
            ui_readonly_in_microversion: None,
            search_boost: None,
            array: None,
            name: None,
            id: None,
            description: None,
            namespace: None,
            owner_type: None,
        }
    }
}


