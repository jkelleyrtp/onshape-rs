/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtInvitationParams {
    #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "defaultCompanyName", skip_serializing_if = "Option::is_none")]
    pub default_company_name: Option<String>,
    #[serde(rename = "planId", skip_serializing_if = "Option::is_none")]
    pub plan_id: Option<String>,
    #[serde(rename = "seats", skip_serializing_if = "Option::is_none")]
    pub seats: Option<i64>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<i32>,
    #[serde(rename = "companyPlan", skip_serializing_if = "Option::is_none")]
    pub company_plan: Option<bool>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    #[serde(rename = "recaptcha", skip_serializing_if = "Option::is_none")]
    pub recaptcha: Option<String>,
    #[serde(rename = "inviteFriendRequest", skip_serializing_if = "Option::is_none")]
    pub invite_friend_request: Option<bool>,
    #[serde(rename = "companyUserEmails", skip_serializing_if = "Option::is_none")]
    pub company_user_emails: Option<Vec<String>>,
    #[serde(rename = "approveUser", skip_serializing_if = "Option::is_none")]
    pub approve_user: Option<bool>,
    #[serde(rename = "privacyConsentAccepted", skip_serializing_if = "Option::is_none")]
    pub privacy_consent_accepted: Option<bool>,
    #[serde(rename = "cadSystemAtSignup", skip_serializing_if = "Option::is_none")]
    pub cad_system_at_signup: Option<String>,
    #[serde(rename = "eulaAccepted", skip_serializing_if = "Option::is_none")]
    pub eula_accepted: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<i32>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<i32>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
}

impl BtInvitationParams {
    pub fn new() -> BtInvitationParams {
        BtInvitationParams {
            country_code: None,
            first_name: None,
            last_name: None,
            email: None,
            default_company_name: None,
            plan_id: None,
            seats: None,
            role: None,
            company_plan: None,
            phone_number: None,
            recaptcha: None,
            invite_friend_request: None,
            company_user_emails: None,
            approve_user: None,
            privacy_consent_accepted: None,
            cad_system_at_signup: None,
            eula_accepted: None,
            name: None,
            message: None,
            id: None,
            state: None,
            source: None,
            description: None,
            password: None,
        }
    }
}


