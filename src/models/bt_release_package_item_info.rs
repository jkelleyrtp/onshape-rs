/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtReleasePackageItemInfo {
    #[serde(rename = "configuration", skip_serializing_if = "Option::is_none")]
    pub configuration: Option<String>,
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<String>,
    #[serde(rename = "companyId", skip_serializing_if = "Option::is_none")]
    pub company_id: Option<String>,
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "elementId", skip_serializing_if = "Option::is_none")]
    pub element_id: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "elementType", skip_serializing_if = "Option::is_none")]
    pub element_type: Option<i32>,
    #[serde(rename = "partId", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    #[serde(rename = "configurationKey", skip_serializing_if = "Option::is_none")]
    pub configuration_key: Option<String>,
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Vec<crate::models::BtReleasePackageItemError>>,
    #[serde(rename = "isIncludedEditable", skip_serializing_if = "Option::is_none")]
    pub is_included_editable: Option<bool>,
    #[serde(rename = "diffThumbnailConfigurationKey", skip_serializing_if = "Option::is_none")]
    pub diff_thumbnail_configuration_key: Option<String>,
    #[serde(rename = "smallThumbnailHref", skip_serializing_if = "Option::is_none")]
    pub small_thumbnail_href: Option<String>,
    #[serde(rename = "isRevisionManaged", skip_serializing_if = "Option::is_none")]
    pub is_revision_managed: Option<bool>,
    #[serde(rename = "mimeType", skip_serializing_if = "Option::is_none")]
    pub mime_type: Option<String>,
    #[serde(rename = "obsoletionRevisionId", skip_serializing_if = "Option::is_none")]
    pub obsoletion_revision_id: Option<String>,
    #[serde(rename = "rpid", skip_serializing_if = "Option::is_none")]
    pub rpid: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Vec<crate::models::BtMetadataPropertyInfo>>,
    #[serde(rename = "href", skip_serializing_if = "Option::is_none")]
    pub href: Option<String>,
    #[serde(rename = "viewRef", skip_serializing_if = "Option::is_none")]
    pub view_ref: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl BtReleasePackageItemInfo {
    pub fn new() -> BtReleasePackageItemInfo {
        BtReleasePackageItemInfo {
            configuration: None,
            version_id: None,
            company_id: None,
            workspace_id: None,
            element_id: None,
            document_id: None,
            element_type: None,
            part_id: None,
            configuration_key: None,
            errors: None,
            is_included_editable: None,
            diff_thumbnail_configuration_key: None,
            small_thumbnail_href: None,
            is_revision_managed: None,
            mime_type: None,
            obsoletion_revision_id: None,
            rpid: None,
            properties: None,
            href: None,
            view_ref: None,
            name: None,
            id: None,
        }
    }
}


