/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Encoding {
    #[serde(rename = "contentType", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<String>,
    #[serde(rename = "headers", skip_serializing_if = "Option::is_none")]
    pub headers: Option<::std::collections::HashMap<String, crate::models::Header>>,
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<Style>,
    #[serde(rename = "explode", skip_serializing_if = "Option::is_none")]
    pub explode: Option<bool>,
    #[serde(rename = "allowReserved", skip_serializing_if = "Option::is_none")]
    pub allow_reserved: Option<bool>,
    #[serde(rename = "extensions", skip_serializing_if = "Option::is_none")]
    pub extensions: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl Encoding {
    pub fn new() -> Encoding {
        Encoding {
            content_type: None,
            headers: None,
            style: None,
            explode: None,
            allow_reserved: None,
            extensions: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Style {
    #[serde(rename = "form")]
    Form,
    #[serde(rename = "spaceDelimited")]
    SpaceDelimited,
    #[serde(rename = "pipeDelimited")]
    PipeDelimited,
    #[serde(rename = "deepObject")]
    DeepObject,
}

