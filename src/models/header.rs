/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Header {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "get$ref", skip_serializing_if = "Option::is_none")]
    pub getref: Option<String>,
    #[serde(rename = "required", skip_serializing_if = "Option::is_none")]
    pub required: Option<bool>,
    #[serde(rename = "deprecated", skip_serializing_if = "Option::is_none")]
    pub deprecated: Option<bool>,
    #[serde(rename = "style", skip_serializing_if = "Option::is_none")]
    pub style: Option<Style>,
    #[serde(rename = "explode", skip_serializing_if = "Option::is_none")]
    pub explode: Option<bool>,
    #[serde(rename = "schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<crate::models::Schema>,
    #[serde(rename = "examples", skip_serializing_if = "Option::is_none")]
    pub examples: Option<::std::collections::HashMap<String, crate::models::Example>>,
    #[serde(rename = "example", skip_serializing_if = "Option::is_none")]
    pub example: Option<serde_json::Value>,
    #[serde(rename = "extensions", skip_serializing_if = "Option::is_none")]
    pub extensions: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl Header {
    pub fn new() -> Header {
        Header {
            description: None,
            getref: None,
            required: None,
            deprecated: None,
            style: None,
            explode: None,
            schema: None,
            examples: None,
            example: None,
            extensions: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Style {
    #[serde(rename = "simple")]
    Simple,
}

