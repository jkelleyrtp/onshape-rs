/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtVersionOrWorkspaceParams {
    #[serde(rename = "versionId", skip_serializing_if = "Option::is_none")]
    pub version_id: Option<String>,
    #[serde(rename = "workspaceId", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    #[serde(rename = "documentId", skip_serializing_if = "Option::is_none")]
    pub document_id: Option<String>,
    #[serde(rename = "microversionId", skip_serializing_if = "Option::is_none")]
    pub microversion_id: Option<String>,
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    #[serde(rename = "isRelease", skip_serializing_if = "Option::is_none")]
    pub is_release: Option<bool>,
    #[serde(rename = "fromHistory", skip_serializing_if = "Option::is_none")]
    pub from_history: Option<bool>,
    #[serde(rename = "purpose", skip_serializing_if = "Option::is_none")]
    pub purpose: Option<i32>,
    #[serde(rename = "clientInteractionMode", skip_serializing_if = "Option::is_none")]
    pub client_interaction_mode: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
}

impl BtVersionOrWorkspaceParams {
    pub fn new() -> BtVersionOrWorkspaceParams {
        BtVersionOrWorkspaceParams {
            version_id: None,
            workspace_id: None,
            document_id: None,
            microversion_id: None,
            read_only: None,
            is_release: None,
            from_history: None,
            purpose: None,
            client_interaction_mode: None,
            name: None,
            description: None,
        }
    }
}


