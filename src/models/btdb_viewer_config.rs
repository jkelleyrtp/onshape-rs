/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtdbViewerConfig {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "queryFieldLabels", skip_serializing_if = "Option::is_none")]
    pub query_field_labels: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "collectionConfigs", skip_serializing_if = "Option::is_none")]
    pub collection_configs: Option<Vec<crate::models::BtdbViewerCollectionConfig>>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<String>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "modifiedBy", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<String>,
    #[serde(rename = "modifiedAt", skip_serializing_if = "Option::is_none")]
    pub modified_at: Option<String>,
    #[serde(rename = "new", skip_serializing_if = "Option::is_none")]
    pub new: Option<bool>,
}

impl BtdbViewerConfig {
    pub fn new() -> BtdbViewerConfig {
        BtdbViewerConfig {
            id: None,
            query_field_labels: None,
            collection_configs: None,
            created_by: None,
            created_at: None,
            modified_by: None,
            modified_at: None,
            new: None,
        }
    }
}


