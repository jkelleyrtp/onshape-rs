/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * The version of the OpenAPI document: 1.104
 * Contact: api-support@onshape.zendesk.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BtMassPropertiesInfo {
    #[serde(rename = "principalInertia", skip_serializing_if = "Option::is_none")]
    pub principal_inertia: Option<Vec<f64>>,
    #[serde(rename = "principalAxes", skip_serializing_if = "Option::is_none")]
    pub principal_axes: Option<Vec<crate::models::BtVector3d>>,
    #[serde(rename = "hasMass", skip_serializing_if = "Option::is_none")]
    pub has_mass: Option<bool>,
    #[serde(rename = "mass", skip_serializing_if = "Option::is_none")]
    pub mass: Option<Vec<f64>>,
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<Vec<f64>>,
    #[serde(rename = "periphery", skip_serializing_if = "Option::is_none")]
    pub periphery: Option<Vec<f64>>,
    #[serde(rename = "centroid", skip_serializing_if = "Option::is_none")]
    pub centroid: Option<Vec<f64>>,
    #[serde(rename = "inertia", skip_serializing_if = "Option::is_none")]
    pub inertia: Option<Vec<f64>>,
    #[serde(rename = "massMissingCount", skip_serializing_if = "Option::is_none")]
    pub mass_missing_count: Option<i32>,
}

impl BtMassPropertiesInfo {
    pub fn new() -> BtMassPropertiesInfo {
        BtMassPropertiesInfo {
            principal_inertia: None,
            principal_axes: None,
            has_mass: None,
            mass: None,
            volume: None,
            periphery: None,
            centroid: None,
            inertia: None,
            mass_missing_count: None,
        }
    }
}


